package email_All;

public class Email_Trim_text {

    public static void main(String[] args) {

            var email = " SupporT@hexlet.io\n";
            email =email.trim().toLowerCase();

            System.out.println(email);



            /*
            Вот лишь некоторые из них:

Перевести все в нижний регистр, чтобы случайно не создавались дубли
одинаковых страниц в поисковых системах
Очистить название от пробельных символов на концах. Там они могут
случайно появиться при вводе названия Выполнить транслитерацию.
Лучше, когда в адресах только символы латинского алфавита
Вырезать все специальные символы, такие как вопросы, восклицательные знаки и тому подобное
Заменить все пробелы на дефисы/
// Название, введенное пользователем. Для простоты на английском
var name = " How much is the fish?   \n";
// вырезаем концевые пробелы и перенос строки
name = name.trim();
// Удаляем вопрос
name = name.replace("?", "");
// Заменяем пробелы на дефис
name = name.replace(" ", "-");
// Переводим в нижний регистр
name = name.toLowerCase();
System.out.println(name); // => how-much-is-the-fish

Этот шаблон можно упростить, убрав промежуточное перезаписывание переменной:

var name = " How much is the fish?   ";
name = name.trim().replace("?", "").replace(" ", "-").toLowerCase();
System.out.println(name); // => how-much-is-the-fish
Благодаря тому, что каждый метод возвращает новую строку,
мы можем продолжать обрабатывать ее, вызывая методы подряд.
Если цепочка методов становится слишком длинной, то ее можно разбить на несколько строк:

name = name.trim()
    .replace("?", "")
    .replace(" ", "-")
    .toLowerCase();
             */

        }

}
